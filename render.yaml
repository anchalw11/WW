services:
  - type: web
    name: WW-backend
    env: python
    plan: free
    buildCommand: |
      pip install -r requirements.txt
      python init_database.py
    startCommand: gunicorn wsgi:application --bind 0.0.0.0:$PORT --workers 1 --timeout 120
    envVars:
      - key: PYTHON_VERSION
        value: 3.9.16
      - key: RENDER_ENVIRONMENT
        value: production
      - key: PORT
        value: 10000
    healthCheckPath: /api/health
    autoDeploy: true

  # YFinance Proxy Server
  - type: web
    name: yfinance-proxy
    env: node
    plan: free
    buildCommand: |
      cd server
      npm install
    startCommand: |
      cd server
      node yfinance-proxy.js
    envVars:
      - key: NODE_VERSION
        value: 18.17.0
      - key: PORT
        value: 10001
    healthCheckPath: /health
    autoDeploy: true

  # Binance Service
  - type: web
    name: binance-service
    env: node
    plan: free
    buildCommand: |
      cd binance_service
      npm install
    startCommand: |
      cd binance_service
      node server.js
    envVars:
      - key: NODE_VERSION
        value: 18.17.0
      - key: PORT
        value: 10002
    healthCheckPath: /health
    autoDeploy: true

  # Frontend Dashboard
  - type: web
    name: enhanced-trading-dashboard
    env: static
    plan: free
    buildCommand: |
      npm install
      npm run build:prod
    staticPublishPath: ./dist
    envVars:
      - key: NODE_VERSION
        value: 18.17.0
    autoDeploy: true

databases:
  # SQLite database (for development/testing)
  - name: enhanced-trading-db
    databaseName: trading_bot
    user: trading_bot_user
    plan: free

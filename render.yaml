services:
  # Frontend Service
  - type: web
    name: trading-bot-frontend
    env: static
    staticPublishPath: ./dist
    buildCommand: npm install && npm run build
    routes:
      - type: rewrite
        source: /*
        destination: /index.html

  # Binance API Service
  - type: web
    name: binance-service
    env: node
    buildCommand: cd binance_service && npm install
    startCommand: cd binance_service && node server.js
    plan: starter
    envVars:
      - key: PORT
        value: 5010
      - key: BINANCE_API_KEY
        value: hFIuHmjyXgckLjXH74HgSnz4N1jFuZGgxKSV4ZDgQqanzfm5MBxvrDI5245VJGaO
      - key: BINANCE_SECRET_KEY
        value: znlONjSaSQb67CpfHya5vz0nfIXUGm5yqFd7bJTctO2HJ94wFNOROGE41nW1iKnX
    healthCheckPath: /health

  # Forex Data Service
  - type: web
    name: forex-data-service
    env: python
    buildCommand: cd forex_data_service && pip install --upgrade pip setuptools wheel && pip install -r requirements.txt
    startCommand: cd forex_data_service && python server.py
    plan: starter
    envVars:
      - key: PORT
        value: 3004
    healthCheckPath: /health

  # Customer Service
  - type: web
    name: customer-service
    env: node
    buildCommand: cd customer-service && npm install
    startCommand: cd customer-service && node server.js
    plan: starter
    envVars:
      - key: PORT
        value: 3005
    healthCheckPath: /health

  # Lot Size Calculator Service
  - type: web
    name: lot-size-calculator
    env: node
    buildCommand: cd lot_size_calculator && npm install
    startCommand: cd lot_size_calculator && node server.js
    plan: starter
    envVars:
      - key: PORT
        value: 3006
    healthCheckPath: /health

  # Main Backend Service
  - type: web
    name: trading-journal-backend
    env: python
    buildCommand: |
      pip install --upgrade pip
      pip install -r requirements.txt
    startCommand: gunicorn --worker-class gevent --worker-connections 1000 --workers 4 --bind 0.0.0.0:$PORT wsgi:application
    plan: starter
    envVars:
      - key: PORT
        value: 5000
      - key: FLASK_ENV
        value: production
      - key: PYTHONUNBUFFERED
        value: "1"
      - key: DATABASE_URL
        fromDatabase:
          name: trading-journal-db
          property: connectionString
      - key: SECRET_KEY
        generateValue: true
      - key: JWT_SECRET_KEY
        generateValue: true
    healthCheckPath: /api/auth/test

databases:
  - name: trading-journal-db
    databaseName: trading_journal
    user: trading_user
    plan: free
